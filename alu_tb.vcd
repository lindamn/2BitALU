$date
  Sat Oct 10 14:55:44 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module alu_tb $end
$var reg 1 ! test0 $end
$var reg 1 " test1 $end
$var reg 1 # test2 $end
$var reg 1 $ input0 $end
$var reg 1 % input1 $end
$var reg 1 & input2 $end
$var reg 1 ' input3 $end
$var reg 1 ( s0 $end
$var reg 1 ) s1 $end
$var reg 1 * s2 $end
$var reg 1 + i0 $end
$var reg 1 , i1 $end
$var reg 1 - j0 $end
$var reg 1 . j1 $end
$var reg 1 / k0 $end
$var reg 1 0 k1 $end
$var reg 1 1 cout $end
$var reg 1 2 out0 $end
$var reg 1 3 out1 $end
$var reg 1 4 cout1 $end
$scope module uut $end
$var reg 1 5 s0 $end
$var reg 1 6 s1 $end
$var reg 1 7 s2 $end
$var reg 1 8 i0 $end
$var reg 1 9 i1 $end
$var reg 1 : j0 $end
$var reg 1 ; j1 $end
$var reg 1 < k0 $end
$var reg 1 = k1 $end
$var reg 1 > cout $end
$var reg 1 ? cout1 $end
$var reg 1 @ cout2 $end
$var reg 1 A cout3 $end
$var reg 1 B bout1 $end
$var reg 1 C bout2 $end
$var reg 1 D temp1 $end
$var reg 1 E temp2 $end
$var reg 1 F temp3 $end
$var reg 1 G and0 $end
$var reg 1 H and1 $end
$var reg 1 I or0 $end
$var reg 1 J or1 $end
$var reg 1 K xor0 $end
$var reg 1 L xor1 $end
$var reg 1 M not0 $end
$var reg 1 N not1 $end
$var reg 1 O not2 $end
$var reg 1 P not3 $end
$var reg 1 Q add0 $end
$var reg 1 R add1 $end
$var reg 1 S inc0 $end
$var reg 1 T inc1 $end
$var reg 1 U sub1s0 $end
$var reg 1 V sub1s1 $end
$var reg 1 W sub2s0 $end
$var reg 1 X sub2s1 $end
$var reg 1 Y addcout $end
$var reg 1 Z inccout $end
$var reg 1 [ sub1scout $end
$var reg 1 \ sub2scout $end
$var reg 1 ] bit02s $end
$var reg 1 ^ bit12s $end
$scope module bit0and $end
$var reg 1 _ r $end
$var reg 1 ` s $end
$var reg 1 a t $end
$upscope $end
$scope module bit1and $end
$var reg 1 b r $end
$var reg 1 c s $end
$var reg 1 d t $end
$upscope $end
$scope module bit0or $end
$var reg 1 e r $end
$var reg 1 f s $end
$var reg 1 g t $end
$upscope $end
$scope module bit1or $end
$var reg 1 h r $end
$var reg 1 i s $end
$var reg 1 j t $end
$upscope $end
$scope module bit0xor $end
$var reg 1 k r $end
$var reg 1 l s $end
$var reg 1 m t $end
$upscope $end
$scope module bit1xor $end
$var reg 1 n r $end
$var reg 1 o s $end
$var reg 1 p t $end
$upscope $end
$scope module bit0not $end
$var reg 1 q r $end
$var reg 1 r s $end
$upscope $end
$scope module bit1not $end
$var reg 1 s r $end
$var reg 1 t s $end
$upscope $end
$scope module bit0add $end
$var reg 1 u a $end
$var reg 1 v b $end
$var reg 1 w cin $end
$var reg 1 x s $end
$var reg 1 y cout $end
$var reg 1 z x $end
$var reg 1 { y $end
$var reg 1 | z $end
$scope module axorb $end
$var reg 1 } r $end
$var reg 1 !" s $end
$var reg 1 "" t $end
$upscope $end
$scope module sum $end
$var reg 1 #" r $end
$var reg 1 $" s $end
$var reg 1 %" t $end
$upscope $end
$scope module cinandaxorb $end
$var reg 1 &" r $end
$var reg 1 '" s $end
$var reg 1 (" t $end
$upscope $end
$scope module aandb $end
$var reg 1 )" r $end
$var reg 1 *" s $end
$var reg 1 +" t $end
$upscope $end
$scope module carryout $end
$var reg 1 ," r $end
$var reg 1 -" s $end
$var reg 1 ." t $end
$upscope $end
$upscope $end
$scope module bit1add $end
$var reg 1 /" a $end
$var reg 1 0" b $end
$var reg 1 1" cin $end
$var reg 1 2" s $end
$var reg 1 3" cout $end
$var reg 1 4" x $end
$var reg 1 5" y $end
$var reg 1 6" z $end
$scope module axorb $end
$var reg 1 7" r $end
$var reg 1 8" s $end
$var reg 1 9" t $end
$upscope $end
$scope module sum $end
$var reg 1 :" r $end
$var reg 1 ;" s $end
$var reg 1 <" t $end
$upscope $end
$scope module cinandaxorb $end
$var reg 1 =" r $end
$var reg 1 >" s $end
$var reg 1 ?" t $end
$upscope $end
$scope module aandb $end
$var reg 1 @" r $end
$var reg 1 A" s $end
$var reg 1 B" t $end
$upscope $end
$scope module carryout $end
$var reg 1 C" r $end
$var reg 1 D" s $end
$var reg 1 E" t $end
$upscope $end
$upscope $end
$scope module j01scomplement $end
$var reg 1 F" r $end
$var reg 1 G" s $end
$upscope $end
$scope module j11scomplement $end
$var reg 1 H" r $end
$var reg 1 I" s $end
$upscope $end
$scope module bit0sub1s $end
$var reg 1 J" a $end
$var reg 1 K" b $end
$var reg 1 L" cin $end
$var reg 1 M" s $end
$var reg 1 N" cout $end
$var reg 1 O" x $end
$var reg 1 P" y $end
$var reg 1 Q" z $end
$scope module axorb $end
$var reg 1 R" r $end
$var reg 1 S" s $end
$var reg 1 T" t $end
$upscope $end
$scope module sum $end
$var reg 1 U" r $end
$var reg 1 V" s $end
$var reg 1 W" t $end
$upscope $end
$scope module cinandaxorb $end
$var reg 1 X" r $end
$var reg 1 Y" s $end
$var reg 1 Z" t $end
$upscope $end
$scope module aandb $end
$var reg 1 [" r $end
$var reg 1 \" s $end
$var reg 1 ]" t $end
$upscope $end
$scope module carryout $end
$var reg 1 ^" r $end
$var reg 1 _" s $end
$var reg 1 `" t $end
$upscope $end
$upscope $end
$scope module bit1sub1s $end
$var reg 1 a" a $end
$var reg 1 b" b $end
$var reg 1 c" cin $end
$var reg 1 d" s $end
$var reg 1 e" cout $end
$var reg 1 f" x $end
$var reg 1 g" y $end
$var reg 1 h" z $end
$scope module axorb $end
$var reg 1 i" r $end
$var reg 1 j" s $end
$var reg 1 k" t $end
$upscope $end
$scope module sum $end
$var reg 1 l" r $end
$var reg 1 m" s $end
$var reg 1 n" t $end
$upscope $end
$scope module cinandaxorb $end
$var reg 1 o" r $end
$var reg 1 p" s $end
$var reg 1 q" t $end
$upscope $end
$scope module aandb $end
$var reg 1 r" r $end
$var reg 1 s" s $end
$var reg 1 t" t $end
$upscope $end
$scope module carryout $end
$var reg 1 u" r $end
$var reg 1 v" s $end
$var reg 1 w" t $end
$upscope $end
$upscope $end
$scope module bit0plus1 $end
$var reg 1 x" a $end
$var reg 1 y" b $end
$var reg 1 z" cin $end
$var reg 1 {" s $end
$var reg 1 |" cout $end
$var reg 1 }" x $end
$var reg 1 !# y $end
$var reg 1 "# z $end
$scope module axorb $end
$var reg 1 ## r $end
$var reg 1 $# s $end
$var reg 1 %# t $end
$upscope $end
$scope module sum $end
$var reg 1 &# r $end
$var reg 1 '# s $end
$var reg 1 (# t $end
$upscope $end
$scope module cinandaxorb $end
$var reg 1 )# r $end
$var reg 1 *# s $end
$var reg 1 +# t $end
$upscope $end
$scope module aandb $end
$var reg 1 ,# r $end
$var reg 1 -# s $end
$var reg 1 .# t $end
$upscope $end
$scope module carryout $end
$var reg 1 /# r $end
$var reg 1 0# s $end
$var reg 1 1# t $end
$upscope $end
$upscope $end
$scope module bit1plus1 $end
$var reg 1 2# a $end
$var reg 1 3# b $end
$var reg 1 4# cin $end
$var reg 1 5# s $end
$var reg 1 6# cout $end
$var reg 1 7# x $end
$var reg 1 8# y $end
$var reg 1 9# z $end
$scope module axorb $end
$var reg 1 :# r $end
$var reg 1 ;# s $end
$var reg 1 <# t $end
$upscope $end
$scope module sum $end
$var reg 1 =# r $end
$var reg 1 ># s $end
$var reg 1 ?# t $end
$upscope $end
$scope module cinandaxorb $end
$var reg 1 @# r $end
$var reg 1 A# s $end
$var reg 1 B# t $end
$upscope $end
$scope module aandb $end
$var reg 1 C# r $end
$var reg 1 D# s $end
$var reg 1 E# t $end
$upscope $end
$scope module carryout $end
$var reg 1 F# r $end
$var reg 1 G# s $end
$var reg 1 H# t $end
$upscope $end
$upscope $end
$scope module bit0sub2s $end
$var reg 1 I# a $end
$var reg 1 J# b $end
$var reg 1 K# cin $end
$var reg 1 L# s $end
$var reg 1 M# cout $end
$var reg 1 N# x $end
$var reg 1 O# y $end
$var reg 1 P# z $end
$scope module axorb $end
$var reg 1 Q# r $end
$var reg 1 R# s $end
$var reg 1 S# t $end
$upscope $end
$scope module sum $end
$var reg 1 T# r $end
$var reg 1 U# s $end
$var reg 1 V# t $end
$upscope $end
$scope module cinandaxorb $end
$var reg 1 W# r $end
$var reg 1 X# s $end
$var reg 1 Y# t $end
$upscope $end
$scope module aandb $end
$var reg 1 Z# r $end
$var reg 1 [# s $end
$var reg 1 \# t $end
$upscope $end
$scope module carryout $end
$var reg 1 ]# r $end
$var reg 1 ^# s $end
$var reg 1 _# t $end
$upscope $end
$upscope $end
$scope module bit1sub2s $end
$var reg 1 `# a $end
$var reg 1 a# b $end
$var reg 1 b# cin $end
$var reg 1 c# s $end
$var reg 1 d# cout $end
$var reg 1 e# x $end
$var reg 1 f# y $end
$var reg 1 g# z $end
$scope module axorb $end
$var reg 1 h# r $end
$var reg 1 i# s $end
$var reg 1 j# t $end
$upscope $end
$scope module sum $end
$var reg 1 k# r $end
$var reg 1 l# s $end
$var reg 1 m# t $end
$upscope $end
$scope module cinandaxorb $end
$var reg 1 n# r $end
$var reg 1 o# s $end
$var reg 1 p# t $end
$upscope $end
$scope module aandb $end
$var reg 1 q# r $end
$var reg 1 r# s $end
$var reg 1 s# t $end
$upscope $end
$scope module carryout $end
$var reg 1 t# r $end
$var reg 1 u# s $end
$var reg 1 v# t $end
$upscope $end
$upscope $end
$scope module bit0inc $end
$var reg 1 w# a $end
$var reg 1 x# b $end
$var reg 1 y# cin $end
$var reg 1 z# s $end
$var reg 1 {# cout $end
$var reg 1 |# x $end
$var reg 1 }# y $end
$var reg 1 !$ z $end
$scope module axorb $end
$var reg 1 "$ r $end
$var reg 1 #$ s $end
$var reg 1 $$ t $end
$upscope $end
$scope module sum $end
$var reg 1 %$ r $end
$var reg 1 &$ s $end
$var reg 1 '$ t $end
$upscope $end
$scope module cinandaxorb $end
$var reg 1 ($ r $end
$var reg 1 )$ s $end
$var reg 1 *$ t $end
$upscope $end
$scope module aandb $end
$var reg 1 +$ r $end
$var reg 1 ,$ s $end
$var reg 1 -$ t $end
$upscope $end
$scope module carryout $end
$var reg 1 .$ r $end
$var reg 1 /$ s $end
$var reg 1 0$ t $end
$upscope $end
$upscope $end
$scope module bit1inc $end
$var reg 1 1$ a $end
$var reg 1 2$ b $end
$var reg 1 3$ cin $end
$var reg 1 4$ s $end
$var reg 1 5$ cout $end
$var reg 1 6$ x $end
$var reg 1 7$ y $end
$var reg 1 8$ z $end
$scope module axorb $end
$var reg 1 9$ r $end
$var reg 1 :$ s $end
$var reg 1 ;$ t $end
$upscope $end
$scope module sum $end
$var reg 1 <$ r $end
$var reg 1 =$ s $end
$var reg 1 >$ t $end
$upscope $end
$scope module cinandaxorb $end
$var reg 1 ?$ r $end
$var reg 1 @$ s $end
$var reg 1 A$ t $end
$upscope $end
$scope module aandb $end
$var reg 1 B$ r $end
$var reg 1 C$ s $end
$var reg 1 D$ t $end
$upscope $end
$scope module carryout $end
$var reg 1 E$ r $end
$var reg 1 F$ s $end
$var reg 1 G$ t $end
$upscope $end
$upscope $end
$scope module bit0mux $end
$var reg 1 H$ i0 $end
$var reg 1 I$ i1 $end
$var reg 1 J$ i2 $end
$var reg 1 K$ i3 $end
$var reg 1 L$ i4 $end
$var reg 1 M$ i5 $end
$var reg 1 N$ i6 $end
$var reg 1 O$ i7 $end
$var reg 1 P$ s0 $end
$var reg 1 Q$ s1 $end
$var reg 1 R$ s2 $end
$var reg 1 S$ f $end
$var reg 1 T$ nots0 $end
$var reg 1 U$ nots1 $end
$var reg 1 V$ nots2 $end
$var reg 1 W$ and0 $end
$var reg 1 X$ and1 $end
$var reg 1 Y$ and2 $end
$var reg 1 Z$ and3 $end
$var reg 1 [$ and4 $end
$var reg 1 \$ and5 $end
$var reg 1 ]$ and6 $end
$var reg 1 ^$ and7 $end
$scope module not0 $end
$var reg 1 _$ r $end
$var reg 1 `$ s $end
$upscope $end
$scope module not1 $end
$var reg 1 a$ r $end
$var reg 1 b$ s $end
$upscope $end
$scope module not2 $end
$var reg 1 c$ r $end
$var reg 1 d$ s $end
$upscope $end
$scope module andi0 $end
$var reg 1 e$ i0 $end
$var reg 1 f$ i1 $end
$var reg 1 g$ i2 $end
$var reg 1 h$ i3 $end
$var reg 1 i$ f $end
$upscope $end
$scope module andi1 $end
$var reg 1 j$ i0 $end
$var reg 1 k$ i1 $end
$var reg 1 l$ i2 $end
$var reg 1 m$ i3 $end
$var reg 1 n$ f $end
$upscope $end
$scope module andi2 $end
$var reg 1 o$ i0 $end
$var reg 1 p$ i1 $end
$var reg 1 q$ i2 $end
$var reg 1 r$ i3 $end
$var reg 1 s$ f $end
$upscope $end
$scope module andi3 $end
$var reg 1 t$ i0 $end
$var reg 1 u$ i1 $end
$var reg 1 v$ i2 $end
$var reg 1 w$ i3 $end
$var reg 1 x$ f $end
$upscope $end
$scope module andi4 $end
$var reg 1 y$ i0 $end
$var reg 1 z$ i1 $end
$var reg 1 {$ i2 $end
$var reg 1 |$ i3 $end
$var reg 1 }$ f $end
$upscope $end
$scope module andi5 $end
$var reg 1 !% i0 $end
$var reg 1 "% i1 $end
$var reg 1 #% i2 $end
$var reg 1 $% i3 $end
$var reg 1 %% f $end
$upscope $end
$scope module andi6 $end
$var reg 1 &% i0 $end
$var reg 1 '% i1 $end
$var reg 1 (% i2 $end
$var reg 1 )% i3 $end
$var reg 1 *% f $end
$upscope $end
$scope module andi7 $end
$var reg 1 +% i0 $end
$var reg 1 ,% i1 $end
$var reg 1 -% i2 $end
$var reg 1 .% i3 $end
$var reg 1 /% f $end
$upscope $end
$scope module orall $end
$var reg 1 0% i0 $end
$var reg 1 1% i1 $end
$var reg 1 2% i2 $end
$var reg 1 3% i3 $end
$var reg 1 4% i4 $end
$var reg 1 5% i5 $end
$var reg 1 6% i6 $end
$var reg 1 7% i7 $end
$var reg 1 8% f $end
$upscope $end
$upscope $end
$scope module bit1mux $end
$var reg 1 9% i0 $end
$var reg 1 :% i1 $end
$var reg 1 ;% i2 $end
$var reg 1 <% i3 $end
$var reg 1 =% i4 $end
$var reg 1 >% i5 $end
$var reg 1 ?% i6 $end
$var reg 1 @% i7 $end
$var reg 1 A% s0 $end
$var reg 1 B% s1 $end
$var reg 1 C% s2 $end
$var reg 1 D% f $end
$var reg 1 E% nots0 $end
$var reg 1 F% nots1 $end
$var reg 1 G% nots2 $end
$var reg 1 H% and0 $end
$var reg 1 I% and1 $end
$var reg 1 J% and2 $end
$var reg 1 K% and3 $end
$var reg 1 L% and4 $end
$var reg 1 M% and5 $end
$var reg 1 N% and6 $end
$var reg 1 O% and7 $end
$scope module not0 $end
$var reg 1 P% r $end
$var reg 1 Q% s $end
$upscope $end
$scope module not1 $end
$var reg 1 R% r $end
$var reg 1 S% s $end
$upscope $end
$scope module not2 $end
$var reg 1 T% r $end
$var reg 1 U% s $end
$upscope $end
$scope module andi0 $end
$var reg 1 V% i0 $end
$var reg 1 W% i1 $end
$var reg 1 X% i2 $end
$var reg 1 Y% i3 $end
$var reg 1 Z% f $end
$upscope $end
$scope module andi1 $end
$var reg 1 [% i0 $end
$var reg 1 \% i1 $end
$var reg 1 ]% i2 $end
$var reg 1 ^% i3 $end
$var reg 1 _% f $end
$upscope $end
$scope module andi2 $end
$var reg 1 `% i0 $end
$var reg 1 a% i1 $end
$var reg 1 b% i2 $end
$var reg 1 c% i3 $end
$var reg 1 d% f $end
$upscope $end
$scope module andi3 $end
$var reg 1 e% i0 $end
$var reg 1 f% i1 $end
$var reg 1 g% i2 $end
$var reg 1 h% i3 $end
$var reg 1 i% f $end
$upscope $end
$scope module andi4 $end
$var reg 1 j% i0 $end
$var reg 1 k% i1 $end
$var reg 1 l% i2 $end
$var reg 1 m% i3 $end
$var reg 1 n% f $end
$upscope $end
$scope module andi5 $end
$var reg 1 o% i0 $end
$var reg 1 p% i1 $end
$var reg 1 q% i2 $end
$var reg 1 r% i3 $end
$var reg 1 s% f $end
$upscope $end
$scope module andi6 $end
$var reg 1 t% i0 $end
$var reg 1 u% i1 $end
$var reg 1 v% i2 $end
$var reg 1 w% i3 $end
$var reg 1 x% f $end
$upscope $end
$scope module andi7 $end
$var reg 1 y% i0 $end
$var reg 1 z% i1 $end
$var reg 1 {% i2 $end
$var reg 1 |% i3 $end
$var reg 1 }% f $end
$upscope $end
$scope module orall $end
$var reg 1 !& i0 $end
$var reg 1 "& i1 $end
$var reg 1 #& i2 $end
$var reg 1 $& i3 $end
$var reg 1 %& i4 $end
$var reg 1 && i5 $end
$var reg 1 '& i6 $end
$var reg 1 (& i7 $end
$var reg 1 )& f $end
$upscope $end
$upscope $end
$scope module coutmux $end
$var reg 1 *& i0 $end
$var reg 1 +& i1 $end
$var reg 1 ,& i2 $end
$var reg 1 -& i3 $end
$var reg 1 .& s0 $end
$var reg 1 /& s1 $end
$var reg 1 0& f $end
$var reg 1 1& nots0 $end
$var reg 1 2& nots1 $end
$var reg 1 3& and0 $end
$var reg 1 4& and1 $end
$var reg 1 5& and2 $end
$var reg 1 6& and3 $end
$scope module not0 $end
$var reg 1 7& r $end
$var reg 1 8& s $end
$upscope $end
$scope module not1 $end
$var reg 1 9& r $end
$var reg 1 :& s $end
$upscope $end
$scope module andi0 $end
$var reg 1 ;& i0 $end
$var reg 1 <& i1 $end
$var reg 1 =& i2 $end
$var reg 1 >& f $end
$upscope $end
$scope module andi1 $end
$var reg 1 ?& i0 $end
$var reg 1 @& i1 $end
$var reg 1 A& i2 $end
$var reg 1 B& f $end
$upscope $end
$scope module andi2 $end
$var reg 1 C& i0 $end
$var reg 1 D& i1 $end
$var reg 1 E& i2 $end
$var reg 1 F& f $end
$upscope $end
$scope module andi3 $end
$var reg 1 G& i0 $end
$var reg 1 H& i1 $end
$var reg 1 I& i2 $end
$var reg 1 J& f $end
$upscope $end
$scope module orall $end
$var reg 1 K& i0 $end
$var reg 1 L& i1 $end
$var reg 1 M& i2 $end
$var reg 1 N& i3 $end
$var reg 1 O& f $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
1!
1"
1#
0$
1%
0&
0'
U(
U)
U*
U+
U,
U-
U.
U/
U0
U1
12
03
04
15
16
17
08
19
0:
0;
1<
0=
0>
0?
1@
1A
1B
0C
UD
UE
1F
0G
0H
0I
1J
0K
1L
1M
0N
1O
1P
0Q
1R
1S
0T
0U
0V
0W
1X
0Y
0Z
1[
0\
0]
0^
0_
0`
0a
1b
0c
0d
0e
0f
0g
1h
0i
1j
0k
0l
0m
1n
0o
1p
0q
1r
1s
0t
1u
0v
0w
1x
0y
1z
0{
0|
1}
0!"
1""
1#"
0$"
1%"
0&"
1'"
0("
1)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
1G"
0H"
1I"
1J"
1K"
0L"
0M"
1N"
0O"
0P"
1Q"
1R"
1S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
1["
1\"
1]"
0^"
1_"
1`"
0a"
1b"
1c"
0d"
1e"
1f"
1g"
0h"
0i"
1j"
1k"
1l"
1m"
0n"
1o"
1p"
1q"
0r"
1s"
0t"
1u"
0v"
1w"
1x"
1y"
0z"
0{"
1|"
0}"
0!#
1"#
1##
1$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
1,#
1-#
1.#
0/#
10#
11#
12#
13#
04#
05#
16#
07#
08#
19#
1:#
1;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
1C#
1D#
1E#
0F#
1G#
1H#
1I#
0J#
0K#
1L#
0M#
1N#
0O#
0P#
1Q#
0R#
1S#
1T#
0U#
1V#
0W#
1X#
0Y#
1Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
1w#
1x#
0y#
0z#
1{#
0|#
0}#
1!$
1"$
1#$
0$$
0%$
0&$
0'$
0($
0)$
0*$
1+$
1,$
1-$
0.$
1/$
10$
01$
12$
03$
14$
05$
16$
07$
08$
09$
1:$
1;$
1<$
0=$
1>$
0?$
1@$
0A$
0B$
1C$
0D$
0E$
0F$
0G$
0H$
1I$
1J$
0K$
1L$
0M$
1N$
0O$
1P$
1Q$
1R$
0S$
0T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
1_$
0`$
1a$
0b$
1c$
0d$
0e$
0f$
0g$
0h$
0i$
1j$
0k$
0l$
1m$
0n$
1o$
0p$
1q$
0r$
0s$
0t$
0u$
1v$
1w$
0x$
1y$
1z$
0{$
0|$
0}$
0!%
1"%
0#%
1$%
0%%
1&%
1'%
1(%
0)%
0*%
0+%
1,%
1-%
1.%
0/%
00%
01%
02%
03%
04%
05%
06%
07%
08%
09%
0:%
0;%
1<%
0=%
0>%
0?%
1@%
1A%
1B%
1C%
1D%
0E%
0F%
0G%
0H%
0I%
0J%
0K%
0L%
0M%
0N%
1O%
1P%
0Q%
1R%
0S%
1T%
0U%
0V%
0W%
0X%
0Y%
0Z%
0[%
0\%
0]%
1^%
0_%
0`%
0a%
1b%
0c%
0d%
1e%
0f%
1g%
1h%
0i%
0j%
1k%
0l%
0m%
0n%
0o%
1p%
0q%
1r%
0s%
0t%
1u%
1v%
0w%
0x%
1y%
1z%
1{%
1|%
1}%
0!&
0"&
0#&
0$&
0%&
0&&
0'&
1(&
1)&
0*&
1+&
0,&
0-&
1.&
1/&
00&
01&
02&
03&
04&
05&
06&
17&
08&
19&
0:&
0;&
0<&
0=&
0>&
1?&
0@&
1A&
0B&
0C&
1D&
0E&
0F&
0G&
1H&
1I&
0J&
0K&
0L&
0M&
0N&
0O&
#10000000
0"
0#
02
13
06
07
0<
1=
0Q$
0R$
1S$
1U$
1V$
1[$
0a$
1b$
0c$
1d$
1g$
1h$
1l$
0m$
0q$
1r$
0v$
0w$
1{$
1|$
1}$
1#%
0$%
0(%
1)%
0-%
0.%
14%
18%
0B%
0C%
0D%
1F%
1G%
0O%
0R%
1S%
0T%
1U%
1X%
1Y%
1]%
0^%
0b%
1c%
0g%
0h%
1l%
1m%
1q%
0r%
0v%
1w%
0{%
0|%
0}%
0(&
0)&
0.&
0/&
11&
12&
07&
18&
09&
1:&
1<&
1=&
1@&
0A&
0D&
1E&
0H&
0I&
#20000000
0!
1$
03
05
18
0=
1I
1K
0M
1Q
0S
1U
1W
1Z
1_
1e
1g
1k
1m
1q
0r
1/"
12"
14"
17"
19"
1:"
1<"
1>"
1@"
1a"
1d"
0f"
0g"
1h"
1i"
0k"
0l"
1n"
0p"
0q"
1r"
1t"
0u"
1v"
1`#
1c#
1e#
1h#
1j#
1k#
1m#
1o#
1q#
11$
04$
15$
06$
18$
19$
0;$
0<$
0>$
0@$
1B$
1D$
1F$
1G$
0P$
0S$
1T$
0[$
0_$
1`$
1f$
1k$
1p$
1u$
0z$
0}$
0"%
0'%
0,%
04%
08%
1:%
1;%
0<%
1=%
1>%
1?%
0@%
0A%
1E%
0P%
1Q%
1W%
1[%
1\%
1`%
1a%
0e%
1f%
1j%
0k%
1o%
0p%
1t%
0u%
0y%
0z%
1-&
1G&
#30000000
1#
12
13
14
17
1<
1=
1>
1R$
1S$
0V$
1X$
1c$
0d$
0h$
1m$
1n$
0r$
1w$
0|$
1$%
0)%
1.%
11%
18%
1C%
1D%
0G%
1I%
1T%
0U%
0Y%
1^%
1_%
0c%
1h%
0m%
1r%
0w%
1|%
1"&
1)&
1/&
10&
02&
14&
19&
0:&
0=&
1A&
1B&
0E&
1I&
1L&
1O&
#40000000
1"
0#
12
13
04
16
07
1<
1=
0>
1Q$
0R$
1S$
0U$
1V$
0X$
1Y$
1a$
0b$
0c$
1d$
0g$
1h$
0l$
0m$
0n$
1q$
1r$
1s$
1v$
0w$
0{$
1|$
0#%
0$%
1(%
1)%
1-%
0.%
01%
12%
18%
1B%
0C%
1D%
0F%
1G%
0I%
1J%
1R%
0S%
0T%
1U%
0X%
1Y%
0]%
0^%
0_%
1b%
1c%
1d%
1g%
0h%
0l%
1m%
0q%
0r%
1v%
1w%
1{%
0|%
0"&
1#&
1)&
1.&
0/&
00&
01&
12&
04&
17&
08&
09&
1:&
0<&
1=&
0@&
0A&
0B&
1D&
1E&
1H&
0I&
0L&
0O&
#50000000
1#
0%
02
04
17
09
0<
0>
0@
0B
0J
0L
1N
0R
1S
1T
0U
1V
0X
0Z
0b
0h
0j
0n
0p
0s
1t
0u
0x
0z
0}
0""
0#"
0%"
0'"
0)"
0J"
1M"
0N"
1O"
0Q"
0R"
1T"
1U"
1W"
1Y"
0["
0]"
0_"
0`"
0c"
0d"
0m"
0n"
0o"
0I#
0L#
0N#
0Q#
0S#
0T#
0V#
0X#
0Z#
0w#
1z#
0{#
1|#
0!$
0"$
1$$
1%$
1'$
1)$
0+$
0-$
0/$
00$
02$
14$
05$
16$
08$
0:$
1;$
1<$
1>$
1@$
0C$
0D$
0F$
0G$
0I$
0J$
1K$
0L$
1M$
0N$
1O$
1R$
0V$
0Y$
1Z$
1c$
0d$
0h$
0j$
1m$
0o$
0r$
0s$
1t$
1w$
1x$
0y$
0|$
1!%
1$%
0&%
0)%
1+%
1.%
02%
13%
0>%
1@%
1C%
0D%
0G%
0J%
1T%
0U%
0Y%
1^%
0c%
0d%
1h%
0m%
0o%
1r%
0w%
1y%
1|%
0#&
0)&
0-&
1/&
00&
02&
06&
19&
0:&
0=&
1A&
0E&
0G&
1I&
0J&
0N&
0O&
#60000000
1!
0"
0#
1&
1'
02
13
14
15
06
07
1:
1;
0<
1=
1>
0A
0F
1G
1J
0K
1L
0O
0P
0Q
1R
1U
0V
1W
1X
1Y
0[
0\
1]
0^
1`
1a
1c
1f
1i
1j
1l
0m
1o
1p
1v
1x
1z
1!"
1""
1#"
1%"
1'"
1*"
10"
02"
13"
04"
16"
18"
09"
0:"
0<"
0>"
1A"
1B"
1D"
1E"
1F"
0G"
1H"
0I"
0K"
0M"
0O"
0S"
0T"
0U"
0W"
0Y"
0\"
0b"
1d"
0e"
1f"
0h"
0j"
1k"
1l"
1n"
1p"
0s"
0t"
0v"
0w"
0x"
1{"
0|"
1}"
0"#
0##
1%#
1&#
1(#
1*#
0,#
0.#
00#
01#
02#
03#
05#
06#
07#
09#
0:#
0;#
0<#
0=#
0?#
0A#
0C#
0D#
0E#
0G#
0H#
1J#
1L#
1N#
1R#
1S#
1T#
1V#
1X#
1[#
0a#
1c#
0d#
1e#
0g#
0i#
1j#
1k#
1m#
1o#
0r#
0s#
0u#
0v#
1I$
1J$
1L$
0M$
1N$
1P$
0Q$
0R$
1S$
0T$
1U$
1V$
0Z$
1[$
1_$
0`$
0a$
1b$
0c$
1d$
0f$
1g$
1h$
1j$
0k$
1l$
0m$
1o$
0p$
0q$
1r$
0u$
0v$
0w$
0x$
1y$
1z$
1{$
1|$
1}$
0!%
1"%
1#%
0$%
1&%
1'%
0(%
1)%
1,%
0-%
0.%
03%
14%
18%
19%
0;%
0=%
1>%
1?%
1A%
0B%
0C%
0D%
0E%
1F%
1G%
0L%
1P%
0Q%
0R%
1S%
0T%
1U%
1V%
0W%
1X%
1Y%
0\%
1]%
0^%
0`%
0a%
0b%
1c%
0f%
0g%
0h%
0j%
1k%
1l%
1m%
0n%
1o%
1p%
1q%
0r%
1t%
1u%
0v%
1w%
1z%
0{%
0|%
0%&
0)&
1*&
0+&
0,&
0.&
0/&
10&
11&
12&
13&
07&
18&
09&
1:&
1;&
1<&
1=&
1>&
0?&
1@&
0A&
0C&
0D&
1E&
0H&
0I&
1K&
1O&
#70000000
1#
12
03
04
17
1<
0=
0>
1R$
0S$
0V$
0[$
1c$
0d$
0h$
1m$
0r$
1w$
0|$
0}$
1$%
0)%
1.%
04%
08%
1C%
1D%
0G%
1M%
1T%
0U%
0Y%
1^%
0c%
1h%
0m%
1r%
1s%
0w%
1|%
1&&
1)&
1/&
00&
02&
03&
19&
0:&
0=&
0>&
1A&
0E&
1I&
0K&
0O&
#80000000
1"
0#
12
13
16
07
1<
1=
1Q$
0R$
1S$
0U$
1V$
1]$
1a$
0b$
0c$
1d$
0g$
1h$
0l$
0m$
1q$
1r$
1v$
0w$
0{$
1|$
0#%
0$%
1(%
1)%
1*%
1-%
0.%
16%
18%
1B%
0C%
1D%
0F%
1G%
0M%
1N%
1R%
0S%
0T%
1U%
0X%
1Y%
0]%
0^%
1b%
1c%
1g%
0h%
0l%
1m%
0q%
0r%
0s%
1v%
1w%
1x%
1{%
0|%
0&&
1'&
1)&
1.&
0/&
01&
12&
17&
08&
09&
1:&
0<&
1=&
0@&
0A&
1D&
1E&
1H&
0I&
#90000000
